{"version":3,"file":"static/js/249.7e7646c5.chunk.js","mappings":"4LAWaA,EAAW,SAAHC,GAAqD,IAA/CC,EAAeD,EAAfC,gBAAiBC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAEJ,EAAFI,GACvDC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACpBI,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAA,OACEC,UAAS,YAAAC,OAAcN,EAAU,UAAY,IAC7CO,aAAc,kBAAMN,GAAW,EAAK,EACpCO,aAAc,kBAAMP,GAAW,EAAM,EAACQ,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OACEL,UAAU,YACVM,MAAO,CAAEnB,gBAAgB,OAADc,OAASd,EAAe,SAElDY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BI,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,kBAAiBI,SAAEhB,KACjCiB,EAAAA,EAAAA,KAAA,KAAGL,UAAU,iBAAgBI,SAAEf,KAC/BgB,EAAAA,EAAAA,KAAA,UACEE,QAAS,WACPV,EAAS,SAADI,OAAUX,IAClBkB,OAAOC,SAAS,EAAG,EACrB,EACAT,UAAU,mBAAkBI,SAC7B,sBAMT,C,0IChCaM,EAAa,WACxB,IAAAnB,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CoB,EAASlB,EAAA,GAAEmB,EAAYnB,EAAA,GAM9B,OACEY,EAAAA,EAAAA,KAAA,WAASL,UAAU,sBAAsBV,GAAG,aAAYc,UACtDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kCAAiCI,UAC9CC,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CACLC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIC,QAAS,IAC1DC,iBAAkBC,EAAAA,GAAW,CAC3BL,KAAMK,EAAAA,KACHC,IAAI,GAAI,iCACRC,SAAS,YACTC,QAAQ,cAAe,kCAC1BP,MAAOI,EAAAA,KACJG,QAAQ,cAAe,wBACvBF,IAAI,GAAI,iCACRC,SAAS,YACZL,MAAOG,EAAAA,KAAaH,MAAM,yBAC1BC,QAASE,EAAAA,KAAaC,IAAI,IAAK,oCAEjCG,SAAU,SAACC,EAAMvC,GAAqB,IAAjBwC,EAASxC,EAATwC,UACff,GACFgB,EAAAA,GAAMC,QAAQ,mDACdC,QAAQC,IAAIL,GACZC,KAEAC,EAAAA,GAAMI,KAAK,uBAEf,EAAE3B,UAEFL,EAAAA,EAAAA,MAACiC,EAAAA,GAAI,CAAChC,UAAU,mBAAkBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,oBAAmBI,SAAC,oCAGlCL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BI,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,oBAAoBiC,QAAQ,OAAM7B,SAAC,WAGpDC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAK,CACJC,aAAa,OACb7C,GAAG,OACHyB,KAAK,OACLqB,KAAK,OACLC,YAAY,YACZrC,UAAU,uBAEZK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8BAA6BI,UAC1CC,EAAAA,EAAAA,KAACiC,EAAAA,GAAY,CAACvB,KAAK,eAIvBhB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BI,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,oBAAoBiC,QAAQ,QAAO7B,SAAC,YAGrDC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAK,CACJC,aAAa,QACb7C,GAAG,QACHyB,KAAK,QACLqB,KAAK,OACLC,YAAY,oBACZrC,UAAU,uBAEZK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8BAA6BI,UAC1CC,EAAAA,EAAAA,KAACiC,EAAAA,GAAY,CAACvB,KAAK,gBAIvBhB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BI,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,oBAAoBiC,QAAQ,QAAO7B,SAAC,WAGrDC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAK,CACJC,aAAa,QACb7C,GAAG,QACHyB,KAAK,QACLqB,KAAK,QACLC,YAAY,qBACZrC,UAAU,uBAEZK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8BAA6BI,UAC1CC,EAAAA,EAAAA,KAACiC,EAAAA,GAAY,CAACvB,KAAK,gBAIvBhB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BI,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,oBAAoBiC,QAAQ,UAAS7B,SAAC,cAGvDC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAK,CACJK,GAAG,WACHjD,GAAG,UACHyB,KAAK,UACLqB,KAAK,OACLC,YAAY,eACZrC,UAAU,mDAEZK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8BAA6BI,UAC1CC,EAAAA,EAAAA,KAACiC,EAAAA,GAAY,CAACvB,KAAK,kBAIvBV,EAAAA,EAAAA,KAAA,OAAKL,UAAU,+BAA8BI,UAC3CL,EAAAA,EAAAA,MAAA,SAAOC,UAAU,+BAA8BI,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,SACEf,GAAG,WACH8C,KAAK,WACLI,QAAS7B,EACT8B,SA7GO,WACrB7B,GAAa,SAAC8B,GAAS,OAAMA,CAAS,GACxC,EA4GgBpC,MAAO,CAAEqC,QAAS,WAEpBtC,EAAAA,EAAAA,KAAA,QACEL,UAAS,mBAAAC,OAAqBU,EAAY,UAAY,IAAKP,SAE1DO,IAAaN,EAAAA,EAAAA,KAACuC,EAAAA,EAAc,OAE/BvC,EAAAA,EAAAA,KAAA,QAAML,UAAU,4BAA2BI,SAAC,8EAOhDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8BAA6BI,UAC1CC,EAAAA,EAAAA,KAAA,UAAQL,UAAU,sBAAsBoC,KAAK,SAAQhC,SAAC,2BASpE,C,wLCtHayC,EAAgB,SAAH3D,GAAiC,IAA3B4D,EAAK5D,EAAL4D,MAAO1D,EAAKF,EAALE,MACrC2D,GAAwCC,EAAAA,EAAAA,KAAhCC,EAAYF,EAAZE,aAAcC,EAAaH,EAAbG,cACtB3D,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD4D,EAAY1D,EAAA,GAAE2D,EAAe3D,EAAA,GACpC4D,GAAsC7D,EAAAA,EAAAA,WAAS,GAAM8D,GAAA5D,EAAAA,EAAAA,GAAA2D,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,EAA8C,SAAHC,GAAA,IAAMnD,EAAOmD,EAAPnD,QAAO,OAC5DF,EAAAA,EAAAA,KAAA,OACEL,UAAU,+DACVO,QAASA,EACTL,aAAc,kBAAMkD,GAAgB,EAAK,EACzCjD,aAAc,kBAAMiD,GAAgB,EAAM,EAAChD,UAE3CC,EAAAA,EAAAA,KAACsD,EAAAA,EAAW,CAACC,MAAOT,EAAe,OAAS,aACxC,EAGFU,EAA8C,SAAHC,GAAA,IAAMvD,EAAOuD,EAAPvD,QAAO,OAC5DF,EAAAA,EAAAA,KAAA,OACEL,UAAU,8DACVO,QAASA,EACTL,aAAc,kBAAMsD,GAAe,EAAK,EACxCrD,aAAc,kBAAMqD,GAAe,EAAM,EAACpD,UAE1CC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAACH,MAAOL,EAAc,OAAS,aACtC,EAKFS,EAAW,CACfC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aANmBnB,EAAe,EAAIC,EAAgB,EAAI,EAO1DmB,eAAgB,EAChBC,WAAWjE,EAAAA,EAAAA,KAACoD,EAAe,IAC3Bc,WAAWlE,EAAAA,EAAAA,KAACwD,EAAe,KAE7B,OACE9D,EAAAA,EAAAA,MAAA,WAASC,UAAU,UAASI,SAAA,EAC1BL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MACEL,UAAU,uBACVwE,wBAAyB,CAAEC,OAAQrF,MAErCiB,EAAAA,EAAAA,KAACqE,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKX,GAAQ,IAAA5D,SACjB0C,EAAM8B,KAAI,SAACC,EAAMC,GAAK,OACrBzE,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACpB,EAAAA,EAAQ,CACPE,gBAAiB0F,EAAKE,MACtB3F,MAAOyF,EAAKzF,MACZC,KAAMwF,EAAKxF,KACXC,GAAIuF,EAAKvF,MALHwF,EAOJ,WAIZ/E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BI,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,0BAAyBI,SAAC,2BACxCC,EAAAA,EAAAA,KAAA,UAAQL,UAAU,wBAAuBI,UACvCC,EAAAA,EAAAA,KAAC2E,EAAAA,GAAO,CACNhF,UAAU,iCACViF,GAAG,QACH1E,QAAS,WACPC,OAAOC,SAAS,EAAG,EACrB,EAAEL,SACH,0BAOX,C,+ECnGa4C,EAAY,WACvB,IAQAzD,GAA0BC,EAAAA,EAAAA,UAASgB,OAAO0E,YAAWzF,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9C4F,EAAK1F,EAAA,GAAE2F,EAAQ3F,EAAA,GAYtB,OAVA4F,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,SAACC,GACpBH,EAASG,EAAMC,OAAON,WACxB,EAEA,OADA1E,OAAOiF,iBAAiB,SAAUH,GAC3B,WACL9E,OAAOkF,oBAAoB,SAAUJ,EACvC,CACF,GAAG,IAEI,CACLH,MAAAA,EACAQ,WAAYR,GAtBI,IAuBhBS,WAAYT,GAtBI,IAuBhBU,WAAYV,GAtBI,IAuBhBW,kBAAmBX,GAtBI,IAuBvBjC,cAAeiC,GAtBG,IAuBlBY,aAAcZ,GAtBI,KAuBlBlC,aAAckC,GAtBI,KAwBtB,C,oEC7BapB,EAAa,SAAH7E,GAA0B,IAApB0E,EAAK1E,EAAL0E,MAC3B,OACEvD,EAAAA,EAAAA,KAAA,OACE2F,MAAM,6BACNb,MAAM,KACNc,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAM/F,UAEXC,EAAAA,EAAAA,KAAA,QACE+F,SAAS,UACTC,SAAS,UACTC,EAAE,wYACFH,KAAMvC,KAId,C,oECjBaD,EAAc,SAAHzE,GAA0B,IAApB0E,EAAK1E,EAAL0E,MAC5B,OACEvD,EAAAA,EAAAA,KAAA,OACE2F,MAAM,6BACNb,MAAM,KACNc,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAM/F,UAEXC,EAAAA,EAAAA,KAAA,QACE+F,SAAS,UACTC,SAAS,UACTC,EAAE,6XACFH,KAAMvC,KAId,C,oECrBa2C,EAAQ,WACnB,OACExG,EAAAA,EAAAA,MAAA,OACEiG,MAAM,6BACNb,MAAM,KACNc,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAM/F,SAAA,EAEXC,EAAAA,EAAAA,KAAA,QACEiG,EAAE,yrBACFH,KAAK,aAEP9F,EAAAA,EAAAA,KAAA,QACEiG,EAAE,iXACFH,KAAK,cAIb,C,oECnBavD,EAAiB,WAC5B,OACE7C,EAAAA,EAAAA,MAAA,OACEiG,MAAM,6BACNb,MAAM,KACNc,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAM/F,SAAA,EAEXC,EAAAA,EAAAA,KAAA,QACEmG,EAAE,MACFC,EAAE,MACFtB,MAAM,KACNc,OAAO,KACPS,GAAG,MACHP,KAAK,UACLQ,OAAO,aAETtG,EAAAA,EAAAA,KAAA,QACE+F,SAAS,UACTC,SAAS,UACTC,EAAE,gUACFH,KAAK,YAIb,C,yKCZaS,EAAW,SAAH1H,GAA2B,IAArB2H,EAAM3H,EAAN2H,OACnBpD,EAA8C,SAAHC,GAAA,IAAMnD,EAAOmD,EAAPnD,QAAO,OAC5DF,EAAAA,EAAAA,KAAA,OAAKL,UAAU,yCAAyCO,QAASA,EAAQH,UACvEC,EAAAA,EAAAA,KAACsD,EAAAA,EAAW,CAACC,MAAM,aACf,EAGFC,EAA8C,SAAHC,GAAA,IAAMvD,EAAOuD,EAAPvD,QAAO,OAC5DF,EAAAA,EAAAA,KAAA,OAAKL,UAAU,yCAAyCO,QAASA,EAAQH,UACvEC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAACH,MAAM,aACd,EAGFI,EAAW,CACf8C,aAAc,SAAUC,GACtB,OAEE1G,EAAAA,EAAAA,KAAA,KAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEL,UAAU,sBACVgH,IAAKH,EAAOE,GACZE,IAAG,SAAAhH,OAAW8G,MAItB,EACA9C,MAAM,EACNiD,UAAW,yBACXhD,UAAU,EACVC,MAAO,IACPG,WAAWjE,EAAAA,EAAAA,KAACoD,EAAe,IAC3Bc,WAAWlE,EAAAA,EAAAA,KAACwD,EAAe,IAC3BO,aAAc,EACdC,eAAgB,GAGlB,OACEhE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oBAAmBI,UAChCC,EAAAA,EAAAA,KAACqE,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKX,GAAQ,IAAA5D,SACjByG,EAAOjC,KAAI,SAACG,EAAOD,GAAK,OACvBzE,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEL,UAAU,gBACVgH,IAAKjC,EACLkC,IAAG,SAAAhH,OAAW6E,EAAQ,MAJhBA,EAMJ,QAKhB,E,smOCtCaqC,EAAS,SAAHjI,GAAuB,IAAjBkI,EAAElI,EAAFkI,GACjBC,EAAcC,EAAGC,MAAK,SAACC,GAAI,OAAKA,EAAKlI,KAAO8H,CAAE,IAEpD,IAAKC,EACH,OAAOhH,EAAAA,EAAAA,KAAA,OAAAD,SAAMuB,EAAAA,GAAM8F,MAAM,uBAG3B,IAAMC,EAAoBL,EAE1B,OACEhH,EAAAA,EAAAA,KAAA,WAASL,UAAU,kBAAiBI,UAClCL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWI,SAAA,EACxBL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBI,SAAA,EACtCL,EAAAA,EAAAA,MAAA,KAAGC,UAAU,mBAAkBI,SAAA,EAC7BC,EAAAA,EAAAA,KAAC2E,EAAAA,GAAO,CAAChF,UAAU,aAAaiF,GAAG,IAAG7E,SAAC,cAGvCC,EAAAA,EAAAA,KAAA,QAAML,UAAU,mBAAkBI,SAAC,OACnCC,EAAAA,EAAAA,KAAC2E,EAAAA,GAAO,CAAChF,UAAU,aAAaiF,GAAG,QAAO7E,SAAC,UAG3CC,EAAAA,EAAAA,KAAA,QAAML,UAAU,mBAAkBI,SAAC,MAClCsH,EAAKC,eAERtH,EAAAA,EAAAA,KAAA,MAAIL,UAAU,0BAAyBI,SAAEsH,EAAKC,iBAEhDtH,EAAAA,EAAAA,KAAA,OAAKL,UAAU,0BAAyBI,UACtCC,EAAAA,EAAAA,KAACuG,EAAQ,CAACC,OAAQa,EAAK3C,WAEzBhF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBI,SAAA,EACpCL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BI,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,6BAA4BI,SAAC,kBAC3CC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,4BAA2BI,SAAEsH,EAAKE,aAC/CvH,EAAAA,EAAAA,KAAA,KAAGL,UAAU,4BAA2BI,SAAEsH,EAAKG,iBAEjDxH,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qBAAoBI,UACjCL,EAAAA,EAAAA,MAAA,MAAAK,SAAA,EACEL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,eAAcI,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAC,cAClCC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAEsH,EAAKI,eAE1C/H,EAAAA,EAAAA,MAAA,MAAIC,UAAU,eAAcI,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAC,YAClCC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAEsH,EAAKK,aAE1ChI,EAAAA,EAAAA,MAAA,MAAIC,UAAU,eAAcI,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAC,eAClCC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAEsH,EAAKM,eAE1CjI,EAAAA,EAAAA,MAAA,MAAIC,UAAU,eAAcI,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAC,UAClCC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAEsH,EAAKO,WAE1ClI,EAAAA,EAAAA,MAAA,MAAIC,UAAU,eAAcI,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAC,WAClCC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAEsH,EAAKQ,YAE1CnI,EAAAA,EAAAA,MAAA,MAAIC,UAAU,eAAcI,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAC,eAClCC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAEsH,EAAKS,0BAQxD,E,8GCvFaC,EAAsB,WACjC,OACErI,EAAAA,EAAAA,MAAAsI,EAAAA,SAAA,CAAAjI,SAAA,EACEC,EAAAA,EAAAA,KAAA,WAASL,UAAU,+BAA8BI,UAC/CC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,YAAWI,UACxBL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BI,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oCAAmCI,UAChDC,EAAAA,EAAAA,KAAA,OACEL,UAAU,2BACVgH,IAAKsB,EACLrB,IAAI,gBAGRlH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCI,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,6BAA4BI,SAAC,4BAG3CL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,4BAA2BI,SAAA,EACvCL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,4BAA2BI,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oCAAmCI,UAChDC,EAAAA,EAAAA,KAACkG,EAAAA,EAAK,OAERlG,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kCAAiCI,SAAC,6DAIjDL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,4BAA2BI,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oCAAmCI,UAChDC,EAAAA,EAAAA,KAACkG,EAAAA,EAAK,OAERlG,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kCAAiCI,SAAC,sEAKjDL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,4BAA2BI,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oCAAmCI,UAChDC,EAAAA,EAAAA,KAACkG,EAAAA,EAAK,OAERlG,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kCAAiCI,SAAC,gDAIjDL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,4BAA2BI,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oCAAmCI,UAChDC,EAAAA,EAAAA,KAACkG,EAAAA,EAAK,OAERlG,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kCAAiCI,SAAC,gDAIjDL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,4BAA2BI,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oCAAmCI,UAChDC,EAAAA,EAAAA,KAACkG,EAAAA,EAAK,OAERlG,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kCAAiCI,SAAC,sEAKjDL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,4BAA2BI,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oCAAmCI,UAChDC,EAAAA,EAAAA,KAACkG,EAAAA,EAAK,OAERlG,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kCAAiCI,SAAC,mEAS3DC,EAAAA,EAAAA,KAACwC,EAAAA,EAAa,CAACzD,MAAM,mBAAmB0D,MAAOyF,MAGrD,ECjEA,EAbkB,WAChB,IACMjJ,GADSkJ,EAAAA,EAAAA,MAAPpB,GAGR,OACErH,EAAAA,EAAAA,MAAAsI,EAAAA,SAAA,CAAAjI,SAAA,EACEC,EAAAA,EAAAA,KAAC8G,EAAM,CAACC,GAAI9H,KACZe,EAAAA,EAAAA,KAAC+H,EAAmB,KACpB/H,EAAAA,EAAAA,KAACK,EAAAA,EAAU,MAGjB,C","sources":["components/cardWork/CardWork.tsx","components/footerForm/FooterForm.tsx","components/projectSlider/ProjectSlider.tsx","hook/useResize.tsx","image/svg/ArrowsLeft.tsx","image/svg/ArrowsRight.tsx","image/svg/Check.tsx","image/svg/CustomCheckBox.tsx","components/sliderCV/SliderCV.tsx","components/hero/heroCV/HeroCV.tsx","components/projectConstructive/ProjectConstructive.tsx","pages/project/Project.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./CardWork.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  backgroundImage: string;\r\n  title: string;\r\n  text: string;\r\n  id: string;\r\n}\r\n\r\nexport const CardWork = ({ backgroundImage, title, text, id }: Props) => {\r\n  const [hovered, setHovered] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div\r\n      className={`workCard ${hovered ? \"hovered\" : \"\"}`}\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n    >\r\n      <div\r\n        className=\"cardImage\"\r\n        style={{ backgroundImage: `url(${backgroundImage})` }}\r\n      />\r\n      <div className=\"workCard__wrapper--textGroup\">\r\n        <h2 className=\"workCard__title\">{title}</h2>\r\n        <p className=\"workCard__text\">{text}</p>\r\n        <button\r\n          onClick={() => {\r\n            navigate(`/Work/${id}`);\r\n            window.scrollTo(0, 0);\r\n          }}\r\n          className=\"workCard__button\"\r\n        >\r\n          View Project\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./FooterForm.css\";\r\nimport \"../../ui/container.css\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useState } from \"react\";\r\nimport { CustomCheckBox } from \"../../image/svg/CustomCheckBox\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const FooterForm = () => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const toggleCheckbox = () => {\r\n    setIsChecked((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <section className=\"footerForm__section\" id=\"footerForm\">\r\n      <div className=\"container footerForm__container\">\r\n        <Formik\r\n          initialValues={{ name: \"\", phone: \"\", email: \"\", massage: \"\" }}\r\n          validationSchema={Yup.object({\r\n            name: Yup.string()\r\n              .max(15, \"Must be 15 characters or less\")\r\n              .required(\"Required\")\r\n              .matches(/^[A-Za-z]+$/, \"Name must contain only letters\"),\r\n            phone: Yup.string()\r\n              .matches(/^\\+?[0-9]+$/, \"Invalid phone number\")\r\n              .max(20, \"Must be 20 characters or less\")\r\n              .required(\"Required\"),\r\n            email: Yup.string().email(\"Invalid email address\"),\r\n            massage: Yup.string().max(150, \"Must be 150 characters or less\"),\r\n          })}\r\n          onSubmit={(values, { resetForm }) => {\r\n            if (isChecked) {\r\n              toast.success(\"Your application has been successfully accepted\");\r\n              console.log(values);\r\n              resetForm();\r\n            } else {\r\n              toast.warn(\"Please take checkBox\");\r\n            }\r\n          }}\r\n        >\r\n          <Form className=\"footerForm__form\">\r\n            <h2 className=\"footerForm__title\">\r\n              A quick way to discuss details\r\n            </h2>\r\n            <div className=\"footerForm__wrapper--input\">\r\n              <label className=\"footerForm__label\" htmlFor=\"name\">\r\n                Name*\r\n              </label>\r\n              <Field\r\n                autoComplete=\"name\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Your name\"\r\n                className=\"footerForm__field\"\r\n              />\r\n              <div className=\"footerForm__error-container\">\r\n                <ErrorMessage name=\"name\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"footerForm__wrapper--input\">\r\n              <label className=\"footerForm__label\" htmlFor=\"phone\">\r\n                Phone*\r\n              </label>\r\n              <Field\r\n                autoComplete=\"phone\"\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                type=\"text\"\r\n                placeholder=\"Your phone number\"\r\n                className=\"footerForm__field\"\r\n              />\r\n              <div className=\"footerForm__error-container\">\r\n                <ErrorMessage name=\"phone\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"footerForm__wrapper--input\">\r\n              <label className=\"footerForm__label\" htmlFor=\"email\">\r\n                Email\r\n              </label>\r\n              <Field\r\n                autoComplete=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Your working email\"\r\n                className=\"footerForm__field\"\r\n              />\r\n              <div className=\"footerForm__error-container\">\r\n                <ErrorMessage name=\"email\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"footerForm__wrapper--input\">\r\n              <label className=\"footerForm__label\" htmlFor=\"message\">\r\n                Massage*\r\n              </label>\r\n              <Field\r\n                as=\"textarea\"\r\n                id=\"message\"\r\n                name=\"message\"\r\n                type=\"text\"\r\n                placeholder=\"Your message\"\r\n                className=\"footerForm__field  footerForm__field--massage\"\r\n              />\r\n              <div className=\"footerForm__error-container\">\r\n                <ErrorMessage name=\"massage\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"footerForm__chekbox--wrapper\">\r\n              <label className=\"footerForm__chekbox--massege\">\r\n                <input\r\n                  id=\"checkbox\"\r\n                  type=\"checkbox\"\r\n                  checked={isChecked}\r\n                  onChange={toggleCheckbox}\r\n                  style={{ display: \"none\" }}\r\n                />\r\n                <span\r\n                  className={`custom-checkbox ${isChecked ? \"checked\" : \"\"}`}\r\n                >\r\n                  {isChecked && <CustomCheckBox />}\r\n                </span>\r\n                <span className=\"footerForm__chekbox--span\">\r\n                  I agree to receive communications from Createx Construction\r\n                  Bureau.\r\n                </span>\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"footerForm__button--wrapper\">\r\n              <button className=\"footerForm__button \" type=\"submit\">\r\n                send request\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import \"../../ui/section.css\";\r\nimport \"../../ui/container.css\";\r\nimport \"./ProjectSlider.css\";\r\nimport { CardWork } from \"../cardWork/CardWork\";\r\nimport Slider from \"react-slick\";\r\nimport { ArrowsRight } from \"../../image/svg/ArrowsRight\";\r\nimport { ArrowsLeft } from \"../../image/svg/ArrowsLeft\";\r\nimport { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useResize } from \"../../hook/useResize\";\r\n\r\ninterface CustomArrowProps {\r\n  onClick?: () => void;\r\n}\r\n\r\ninterface WorkData {\r\n  image: string;\r\n  text: string;\r\n  title: string;\r\n  id: string;\r\n}\r\n\r\ninterface Props {\r\n  works: WorkData[];\r\n  title: string;\r\n}\r\n\r\nexport const ProjectSlider = ({ works, title }: Props) => {\r\n  const { isScreenXxxl, isScreenTable } = useResize();\r\n  const [hoveredRight, setHoveredRight] = useState(false);\r\n  const [hoveredLeft, setHoveredLeft] = useState(false);\r\n\r\n  const CustomNextArrow: React.FC<CustomArrowProps> = ({ onClick }) => (\r\n    <div\r\n      className=\"project__home--custom-arrow project__home--custom-arrowRight\"\r\n      onClick={onClick}\r\n      onMouseEnter={() => setHoveredRight(true)}\r\n      onMouseLeave={() => setHoveredRight(false)}\r\n    >\r\n      <ArrowsRight color={hoveredRight ? \"#fff\" : \"#424551\"} />\r\n    </div>\r\n  );\r\n\r\n  const CustomPrevArrow: React.FC<CustomArrowProps> = ({ onClick }) => (\r\n    <div\r\n      className=\"project__home--custom-arrow project__home--custom-arrowLeft\"\r\n      onClick={onClick}\r\n      onMouseEnter={() => setHoveredLeft(true)}\r\n      onMouseLeave={() => setHoveredLeft(false)}\r\n    >\r\n      <ArrowsLeft color={hoveredLeft ? \"#fff\" : \"#424551\"} />\r\n    </div>\r\n  );\r\n\r\n  const slidesToShow = isScreenXxxl ? 3 : isScreenTable ? 2 : 1;\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: slidesToShow,\r\n    slidesToScroll: 1,\r\n    nextArrow: <CustomNextArrow />,\r\n    prevArrow: <CustomPrevArrow />,\r\n  };\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h2\r\n          className=\"project__home--title\"\r\n          dangerouslySetInnerHTML={{ __html: title }}\r\n        ></h2>\r\n        <Slider {...settings}>\r\n          {works.map((work, index) => (\r\n            <div key={index}>\r\n              <CardWork\r\n                backgroundImage={work.image}\r\n                title={work.title}\r\n                text={work.text}\r\n                id={work.id}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n      <div className=\"project__home--wrapperBottom\">\r\n        <h2 className=\"project__home--titleTwo\">Explore all our works</h2>\r\n        <button className=\"project__home--button\">\r\n          <NavLink\r\n            className=\"project__home__portfolio--link\"\r\n            to=\"/Work\"\r\n            onClick={() => {\r\n              window.scrollTo(0, 0);\r\n            }}\r\n          >\r\n            View portfolio\r\n          </NavLink>\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useResize = () => {\r\n  const SCREEN_SM = 450;\r\n  const SCREEN_MD = 786;\r\n  const SCREEN_LG = 992;\r\n  const SCREEN_tabl_mini = 620;\r\n  const SCREEN_tabl = 868;\r\n  const SCREEN_Hero = 1065;\r\n  const SCREEN_XXXL = 1230;\r\n\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = (event: any) => {\r\n      setWidth(event.target.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    width,\r\n    isScreenSm: width >= SCREEN_SM,\r\n    isScreenMd: width >= SCREEN_MD,\r\n    isScreenLg: width >= SCREEN_LG,\r\n    isScreenTableMini: width >= SCREEN_tabl_mini,\r\n    isScreenTable: width >= SCREEN_tabl,\r\n    isScreenHero: width >= SCREEN_Hero,\r\n    isScreenXxxl: width >= SCREEN_XXXL,\r\n  };\r\n};\r\n","interface Props {\r\n  color: string;\r\n}\r\n\r\nexport const ArrowsLeft = ({ color }: Props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M9.20711 17.2071C8.81658 17.5976 8.18342 17.5976 7.79289 17.2071L3.29289 12.7071C2.90237 12.3166 2.90237 11.6834 3.29289 11.2929L7.79289 6.79289C8.18342 6.40237 8.81658 6.40237 9.20711 6.79289C9.59763 7.18342 9.59763 7.81658 9.20711 8.20711L6.41421 11L20 11C20.5523 11 21 11.4477 21 12C21 12.5523 20.5523 13 20 13L6.41421 13L9.20711 15.7929C9.59763 16.1834 9.59763 16.8166 9.20711 17.2071Z\"\r\n        fill={color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","interface Props {\r\n  color: string;\r\n}\r\n\r\nexport const ArrowsRight = ({ color }: Props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M14.7929 6.79289C15.1834 6.40237 15.8166 6.40237 16.2071 6.79289L20.7071 11.2929C21.0976 11.6834 21.0976 12.3166 20.7071 12.7071L16.2071 17.2071C15.8166 17.5976 15.1834 17.5976 14.7929 17.2071C14.4024 16.8166 14.4024 16.1834 14.7929 15.7929L17.5858 13H4C3.44772 13 3 12.5523 3 12C3 11.4477 3.44772 11 4 11H17.5858L14.7929 8.20711C14.4024 7.81658 14.4024 7.18342 14.7929 6.79289Z\"\r\n        fill={color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","export const Check = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"none\"\r\n    >\r\n      <path\r\n        d=\"M10.0007 19.1673C15.0549 19.1673 19.1673 15.0553 19.1673 10.0007C19.1673 9.12822 19.0455 8.26847 18.8044 7.44509C18.6856 7.04021 18.2628 6.80765 17.8568 6.92645C17.4516 7.04487 17.2197 7.46915 17.3382 7.87403C17.5379 8.5581 17.6395 9.27387 17.6395 10.0007C17.6395 14.2127 14.2127 17.6395 10.0007 17.6395C5.78863 17.6395 2.36176 14.2127 2.36176 10.0007C2.36176 5.78863 5.78863 2.36176 10.0007 2.36176C11.5314 2.36176 13.0042 2.80935 14.2597 3.65586C14.6092 3.89178 15.0844 3.79909 15.3199 3.44959C15.5556 3.09973 15.4637 2.62491 15.1138 2.38918C13.6051 1.37184 11.8371 0.833984 10.0007 0.833984C4.94641 0.833984 0.833984 4.94604 0.833984 10.0007C0.833984 15.0553 4.94641 19.1673 10.0007 19.1673Z\"\r\n        fill=\"#FF5A30\"\r\n      />\r\n      <path\r\n        d=\"M18.578 1.91131L10.0005 10.4884L7.25636 7.74464C6.93084 7.41932 6.40349 7.41932 6.07797 7.74464C5.75265 8.07016 5.75265 8.5975 6.07797 8.92302L9.41131 12.2564C9.57427 12.4193 9.78708 12.5005 10.0005 12.5005C10.2139 12.5005 10.4267 12.4193 10.5897 12.2564L19.7564 3.08969C20.0817 2.76417 20.0817 2.23683 19.7564 1.91131C19.4308 1.58599 18.9035 1.58599 18.578 1.91131Z\"\r\n        fill=\"#FF5A30\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","export const CustomCheckBox = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 16 16\"\r\n      fill=\"none\"\r\n    >\r\n      <rect\r\n        x=\"0.5\"\r\n        y=\"0.5\"\r\n        width=\"15\"\r\n        height=\"15\"\r\n        rx=\"2.5\"\r\n        fill=\"#FF5A30\"\r\n        stroke=\"#FF5A30\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M12.8277 4.19526C13.0574 4.45561 13.0574 4.87772 12.8277 5.13807L6.94536 11.8047C6.71564 12.0651 6.34319 12.0651 6.11347 11.8047L3.17229 8.4714C2.94257 8.21105 2.94257 7.78894 3.17229 7.5286C3.40201 7.26825 3.77446 7.26825 4.00418 7.5286L6.52941 10.3905L11.9958 4.19526C12.2255 3.93491 12.598 3.93491 12.8277 4.19526Z\"\r\n        fill=\"white\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import Slider from \"react-slick\";\r\nimport \"./SliderCV.css\";\r\nimport \"../hero/heroHomePage/HeroHome.css\";\r\nimport { ArrowsRight } from \"../../image/svg/ArrowsRight\";\r\nimport { ArrowsLeft } from \"../../image/svg/ArrowsLeft\";\r\n\r\ninterface Props {\r\n  images: string[];\r\n}\r\n\r\ninterface CustomArrowProps {\r\n  onClick?: () => void;\r\n}\r\n\r\nexport const SliderCV = ({ images }: Props) => {\r\n  const CustomNextArrow: React.FC<CustomArrowProps> = ({ onClick }) => (\r\n    <div className=\"custom-arrow next-arrow sliderCV-arrow\" onClick={onClick}>\r\n      <ArrowsRight color=\"#424551\" />\r\n    </div>\r\n  );\r\n\r\n  const CustomPrevArrow: React.FC<CustomArrowProps> = ({ onClick }) => (\r\n    <div className=\"custom-arrow prev-arrow sliderCV-arrow\" onClick={onClick}>\r\n      <ArrowsLeft color=\"#424551\" />\r\n    </div>\r\n  );\r\n\r\n  const settings = {\r\n    customPaging: function (i: number) {\r\n      return (\r\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n        <a>\r\n          <img\r\n            className=\"sliderCV__img--mini\"\r\n            src={images[i]}\r\n            alt={`Slide ${i}`}\r\n          />\r\n        </a>\r\n      );\r\n    },\r\n    dots: true,\r\n    dotsClass: \"slick-dots slick-thumb\",\r\n    infinite: true,\r\n    speed: 500,\r\n    nextArrow: <CustomNextArrow />,\r\n    prevArrow: <CustomPrevArrow />,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper__sliderCV\">\r\n      <Slider {...settings}>\r\n        {images.map((image, index) => (\r\n          <div key={index}>\r\n            <img\r\n              className=\"sliderCV__img\"\r\n              src={image}\r\n              alt={`Slide ${index + 1}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n","import { NavLink } from \"react-router-dom\";\r\nimport \"../../../ui/container.css\";\r\nimport \"../../../ui/textStyled.css\";\r\nimport \"./HeroCV.css\";\r\nimport { SliderCV } from \"../../sliderCV/SliderCV\";\r\nimport CV from \"../../../util/CV/CV.json\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface Props {\r\n  ID: string | undefined;\r\n}\r\n\r\ninterface ProjectData {\r\n  id: string;\r\n  image: string[];\r\n  info: string;\r\n  titleHouse: string;\r\n  buildGoal: string;\r\n  modernGoal: string;\r\n  location: string;\r\n  client: string;\r\n  architet: string;\r\n  size: string;\r\n  value: string;\r\n  complete: string;\r\n}\r\n\r\nexport const HeroCV = ({ ID }: Props) => {\r\n  const projectInfo = CV.find((item) => item.id === ID);\r\n\r\n  if (!projectInfo) {\r\n    return <div>{toast.error(\"Project not found\")}</div>;\r\n  }\r\n\r\n  const info: ProjectData = projectInfo;\r\n\r\n  return (\r\n    <section className=\"heroCV__section\">\r\n      <div className=\"container\">\r\n        <div className=\"heroCV__wraper--content\">\r\n          <p className=\"hero__link--text\">\r\n            <NavLink className=\"hero__link\" to=\"/\">\r\n              Homepage\r\n            </NavLink>\r\n            <span className=\"hero__link--span\">/</span>\r\n            <NavLink className=\"hero__link\" to=\"/Work\">\r\n              Work\r\n            </NavLink>\r\n            <span className=\"hero__link--span\">/</span>\r\n            {info.titleHouse}\r\n          </p>\r\n          <h1 className=\"heroCV__title heroTitle\">{info.titleHouse}</h1>\r\n        </div>\r\n        <div className=\"heroCV__wrapper--slider\">\r\n          <SliderCV images={info.image} />\r\n        </div>\r\n        <div className=\"heroCV__wrapper--info\">\r\n          <div className=\"heroCV__wrapper--projectGoal\">\r\n            <h2 className=\"heroCV__projectGoal--title\">Project goal</h2>\r\n            <p className=\"heroCV__projectGoal--text\">{info.buildGoal}</p>\r\n            <p className=\"heroCV__projectGoal--text\">{info.modernGoal}</p>\r\n          </div>\r\n          <div className=\"heroCV__info__card\">\r\n            <ul>\r\n              <li className=\"heroCV__item\">\r\n                <p className=\"heroCV__item--text\">LOCATION</p>\r\n                <p className=\"heroCV__item--span\">{info.location}</p>\r\n              </li>\r\n              <li className=\"heroCV__item\">\r\n                <p className=\"heroCV__item--text\">CLIENT</p>\r\n                <p className=\"heroCV__item--span\">{info.client}</p>\r\n              </li>\r\n              <li className=\"heroCV__item\">\r\n                <p className=\"heroCV__item--text\">ARCHITECT</p>\r\n                <p className=\"heroCV__item--span\">{info.architet}</p>\r\n              </li>\r\n              <li className=\"heroCV__item\">\r\n                <p className=\"heroCV__item--text\">SIZE</p>\r\n                <p className=\"heroCV__item--span\">{info.size}</p>\r\n              </li>\r\n              <li className=\"heroCV__item\">\r\n                <p className=\"heroCV__item--text\">VALUE</p>\r\n                <p className=\"heroCV__item--span\">{info.value}</p>\r\n              </li>\r\n              <li className=\"heroCV__item\">\r\n                <p className=\"heroCV__item--text\">COMPLETED</p>\r\n                <p className=\"heroCV__item--span\">{info.complete}</p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import \"./ProjectConstructive.css\";\r\nimport \"../../ui/container.css\";\r\nimport { Check } from \"../../image/svg/Check\";\r\nimport projectFoto from \"../../image/projectConstructiveFoto.jpg\";\r\nimport { ProjectSlider } from \"../projectSlider/ProjectSlider\";\r\nimport Homework from \"../../util/Homework.json\";\r\n\r\nexport const ProjectConstructive = () => {\r\n  return (\r\n    <>\r\n      <section className=\"projectConstructive__section\">\r\n        <div className=\"container\">\r\n          <div className=\"projectConstructive__wrapper\">\r\n            <div className=\"projectConstructive__wrapper--img\">\r\n              <img\r\n                className=\"projectConstructive__img\"\r\n                src={projectFoto}\r\n                alt=\"work men\"\r\n              />\r\n            </div>\r\n            <div className=\"projectConstructive__wrapper--ul\">\r\n              <h2 className=\"projectConstructive__title\">\r\n                Constructive decisions\r\n              </h2>\r\n              <ul className=\"projectConstructive__list\">\r\n                <li className=\"projectConstructive__item\">\r\n                  <div className=\"projectConstructive__wrapper--svg\">\r\n                    <Check />\r\n                  </div>\r\n                  <p className=\"projectConstructive__item--text\">\r\n                    Vitae ultrices ornare eu sed in est quisque duis id.\r\n                  </p>\r\n                </li>\r\n                <li className=\"projectConstructive__item\">\r\n                  <div className=\"projectConstructive__wrapper--svg\">\r\n                    <Check />\r\n                  </div>\r\n                  <p className=\"projectConstructive__item--text\">\r\n                    A fermentum in morbi pretium aliquam adipiscing donec\r\n                    tempus.\r\n                  </p>\r\n                </li>\r\n                <li className=\"projectConstructive__item\">\r\n                  <div className=\"projectConstructive__wrapper--svg\">\r\n                    <Check />\r\n                  </div>\r\n                  <p className=\"projectConstructive__item--text\">\r\n                    Mauris odio pellentesque commodo, diam.\r\n                  </p>\r\n                </li>\r\n                <li className=\"projectConstructive__item\">\r\n                  <div className=\"projectConstructive__wrapper--svg\">\r\n                    <Check />\r\n                  </div>\r\n                  <p className=\"projectConstructive__item--text\">\r\n                    Mauris odio pellentesque commodo, diam.\r\n                  </p>\r\n                </li>\r\n                <li className=\"projectConstructive__item\">\r\n                  <div className=\"projectConstructive__wrapper--svg\">\r\n                    <Check />\r\n                  </div>\r\n                  <p className=\"projectConstructive__item--text\">\r\n                    At pharetra libero blandit risus, fringilla sed commodo\r\n                    diam.\r\n                  </p>\r\n                </li>\r\n                <li className=\"projectConstructive__item\">\r\n                  <div className=\"projectConstructive__wrapper--svg\">\r\n                    <Check />\r\n                  </div>\r\n                  <p className=\"projectConstructive__item--text\">\r\n                    Integer ultricies viverra ut enim viverra ut.\r\n                  </p>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <ProjectSlider title=\"Similar projects\" works={Homework} />\r\n    </>\r\n  );\r\n};\r\n","import { useParams } from \"react-router-dom\";\r\nimport { HeroCV } from \"../../components/hero/heroCV/HeroCV\";\r\nimport { FooterForm } from \"../../components/footerForm/FooterForm\";\r\nimport { ProjectConstructive } from \"../../components/projectConstructive/ProjectConstructive\";\r\n\r\nconst ProjectID = () => {\r\n  const { ID } = useParams();\r\n  const id = ID;\r\n\r\n  return (\r\n    <>\r\n      <HeroCV ID={id} />\r\n      <ProjectConstructive />\r\n      <FooterForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectID;\r\n"],"names":["CardWork","_ref","backgroundImage","title","text","id","_useState","useState","_useState2","_slicedToArray","hovered","setHovered","navigate","useNavigate","_jsxs","className","concat","onMouseEnter","onMouseLeave","children","_jsx","style","onClick","window","scrollTo","FooterForm","isChecked","setIsChecked","Formik","initialValues","name","phone","email","massage","validationSchema","Yup","max","required","matches","onSubmit","values","resetForm","toast","success","console","log","warn","Form","htmlFor","Field","autoComplete","type","placeholder","ErrorMessage","as","checked","onChange","prevState","display","CustomCheckBox","ProjectSlider","works","_useResize","useResize","isScreenXxxl","isScreenTable","hoveredRight","setHoveredRight","_useState3","_useState4","hoveredLeft","setHoveredLeft","CustomNextArrow","_ref2","ArrowsRight","color","CustomPrevArrow","_ref3","ArrowsLeft","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","dangerouslySetInnerHTML","__html","Slider","_objectSpread","map","work","index","image","NavLink","to","innerWidth","width","setWidth","useEffect","handleResize","event","target","addEventListener","removeEventListener","isScreenSm","isScreenMd","isScreenLg","isScreenTableMini","isScreenHero","xmlns","height","viewBox","fill","fillRule","clipRule","d","Check","x","y","rx","stroke","SliderCV","images","customPaging","i","src","alt","dotsClass","HeroCV","ID","projectInfo","CV","find","item","error","info","titleHouse","buildGoal","modernGoal","location","client","architet","size","value","complete","ProjectConstructive","_Fragment","projectFoto","Homework","useParams"],"sourceRoot":""}